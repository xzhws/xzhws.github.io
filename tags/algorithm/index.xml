<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>algorithm - 标签 - xiezhiqiang</title>
        <link>https://xzhws.github.io/tags/algorithm/</link>
        <description>algorithm - 标签 - xiezhiqiang</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 07 Apr 2021 21:56:35 &#43;0800</lastBuildDate><atom:link href="https://xzhws.github.io/tags/algorithm/" rel="self" type="application/rss+xml" /><item>
    <title>Algorithm</title>
    <link>https://xzhws.github.io/post/algorithm/</link>
    <pubDate>Wed, 07 Apr 2021 21:56:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xzhws.github.io/post/algorithm/</guid>
    <description><![CDATA[已完成
 遇到大整数乘法取模，优先开long long，不然乘法容易爆int。int 4个字节，long 8个字节， long long 16个字节，就算两个int的最大值相乘也不过8个字节，所以开long或者long long足够解决溢出的问题。==再不行记得开unsigned long long== 多行输出，一定要注意数组，变量的重新初始化！！！ 字符串处理时最差时间复杂度注意：子串(最差复杂度O(N^2)) 与子序列（最差复杂度O(2^N)） c++特定字符串分隔字符stringstream （while(getline(ss,tmp,'/'))） 位运算: mask&amp;(-mask) 可以取到mask右边第一个非0的二进制的位置; 负数的补码：反码（符号位不变）+1 KMP 算法求最短循环节时，注意把最长公共前后缀字符数组D先求出来，然后观察D与要求的内容（比如最小循环节的关系, len-D(len)) 回文字符串的一个特征：假设回文串为P，那么字符串P+'#'+reverse(P) 与KMP 的关系为: D[len-1]=P.length() 滑动窗口模板 题目：leetcode 713. 乘积小于K的子数组  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  class Solution { public: //滑动窗口模板题  int numSubarrayProductLessThanK(vector&lt;int&gt;&amp; nums, int k) { int n=nums.]]></description>
</item></channel>
</rss>
